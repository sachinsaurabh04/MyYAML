Description: This template deploys a VPC, With a pair of public and private subnets across 
  two AvailabilityZones. It Deploys an Internet Gateway, With a default route on the public 
  subnet. It Deploys a NAT Gateway for the private subnet. It Deploys httpd in public EC2 
  instance and installs mysql in private EC2 instance.

Mappings:
  RegionMap:
    us-east-1:
      AMI: ami-0b898040803850657
Resources:
  MyVPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        - Key: Name
          Value: MyVPC
   
  MyPublicSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: "us-east-1a"
      MapPublicIpOnLaunch: 'true'
      Tags:
      - Key: Name
        Value: MyPublicSubnet

  MyPrivateSubnet:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref MyVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: "us-east-1b"
      MapPublicIpOnLaunch: 'false'
      Tags:
      - Key: Name
        Value: MyPrivateSubnet

  MyRtPub:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: MyRtPub

  MyRtPri:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref MyVPC
      Tags:
        - Key: Name
          Value: MyRtPri

  Route1:
    Type: 'AWS::EC2::Route'
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref MyRtPub
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref MyInternetGateway

  MyPublicSubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref MyPublicSubnet
      RouteTableId: !Ref MyRtPub

  MyPrivatesubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref MyPrivateSubnet
      RouteTableId: !Ref MyRtPri

  MyInternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: MyInternetGateway
  
  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref MyInternetGateway

  NAT:
    Type: AWS::EC2::NatGateway
    Properties:
     AllocationId:
       Fn::GetAtt:
       - EIP
       - AllocationId
     SubnetId: !Ref MyPublicSubnet
     Tags:
     - Key: Name
       Value: MyNat

  EIP:
    DependsOn: AttachGateway
    Type: AWS::EC2::EIP
    Properties:
      Domain: MyVPC

  Route2:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref MyRtPri
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NAT
  
  PublicInstanceSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Limits security group to allow port 22 and 80
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0

  PrivateInstanceSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties: 
      GroupDescription: Limits group to allow port 22 and 3306
      VpcId: !Ref MyVPC
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 3306
        ToPort: 3306
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: 0.0.0.0/0
  
  LinPubInsWebser:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: us-east-1a
      KeyName: nvirlin24jul
      ImageId: !FindInMap
        - RegionMap
        - !Ref 'AWS::Region'
        - AMI
      Tags:
        - Key: Name
          Value: Webserver
      InstanceType: t2.micro
      Monitoring: 'false'
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -ex
            yum update -y
            yum install -y httpd;
            service httpd start;
      NetworkInterfaces:
        - AssociatePublicIpAddress: 'true'
          GroupSet: 
          - !Ref PublicInstanceSecGroup
          DeviceIndex: '0'
          DeleteOnTermination: 'true'
          SubnetId: !Ref MyPublicSubnet

  LinPriInsDBser:
    Type: AWS::EC2::Instance
    Properties:
      AvailabilityZone: "us-east-1b"
      KeyName: nvirlin24jul
      ImageId: !FindInMap
        - RegionMap
        - !Ref 'AWS::Region'
        - AMI
      Tags:
        - Key: Name
          Value: Database Server
      InstanceType: t2.micro
      Monitoring: 'false'
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash -ex
            yum update -y
            yum install -y mysql;
            service httpd mysql;
      NetworkInterfaces:
        - AssociatePublicIpAddress: 'false'
          GroupSet: 
          - !Ref PrivateInstanceSecGroup
          DeviceIndex: '0'
          DeleteOnTermination: 'true'
          SubnetId: !Ref MyPrivateSubnet
